TASK - 01
===============================
1. We start by importing necessary libraries, including TensorFlow and Keras for building and training the neural network.

2. We load the MNIST dataset and preprocess it by normalizing pixel values to be in the range [0, 1].

3. We define the neural network model using the Sequential API, consisting of a Flatten layer to flatten the input images, a fully connected hidden layer with 128 units and ReLU activation, a dropout layer to prevent overfitting, and an output layer with 10 units for classification.

4. The model is compiled using the Adam optimizer, sparse categorical cross-entropy loss (suitable for integer labels), and accuracy as the evaluation metric.

5. We train the model on the training data for a specified number of epochs (10 in this case) and validate it on the test data.

6. Finally, we evaluate the model's performance on the test dataset and plot the training history for visualization.

Kaggle link
https://www.kaggle.com/code/arman170616/train-mnist-neural-network 


TASK - 02
=====================



               
TASK - 03 
=====================  




1. We create an SQLite database named books.db and define a books table within it.

2. The script defines functions to add, retrieve, update, and delete books in the database. These functions use SQL queries to interact with the database.

3. In the __main__ block, we provide a simple command-line interface for the user to interact with the database. The user can choose from various options to perform database operations.


This structure is chosen because it provides a basic and organized way to interact with a simple database for managing books. The script allows the user to perform all the CRUD (Create, Read, Update, Delete) operations on the books in the database using a user-friendly command-line interface.
